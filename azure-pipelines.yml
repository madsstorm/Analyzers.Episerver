trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'

steps:
- task: DotNetCoreCLI@2
  displayName: 'Build'
  inputs:
    command: 'build'
    projects: 'src/CodeAnalyzers.Episerver/CodeAnalyzers.Episerver.csproj'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Test'
  inputs:
    command: 'test'
    projects: 'test/CodeAnalyzers.Episerver.Test/CodeAnalyzers.Episerver.Test.csproj'
    arguments: '--configuration $(buildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=$(Build.SourcesDirectory)/TestResults/Coverage/'

- task: reportgenerator@4
  displayName: 'Generate code coverage'
  inputs:
    reports: '$(Build.SourcesDirectory)/TestResults/Coverage/coverage.cobertura.xml'
    targetdir: '$(Build.SourcesDirectory)/coveragereport'

- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage'
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(Build.SourcesDirectory)/coveragereport/Cobertura.xml'
    reportDirectory: '$(Build.SourcesDirectory)/coveragereport'

- script: '%USERPROFILE%\.nuget\packages\codecov\1.7.2\tools\codecov.exe -f "$(Build.SourcesDirectory)/TestResults/Coverage/coverage.cobertura.xml" -t $(CODECOV_TOKEN)'   
  displayName: Upload coverage to codecov.io   

- task: CopyFiles@2
  displayName: 'Copy package'
  inputs:
    Contents: '**/Release/**/*.nupkg'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    FlattenFolders: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish artifact'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
